name: Deploy dev

on:
  push:
    branches: ["main"]

env:
  REGISTRY: ghcr.io

jobs:
  python_pytest_flake8:
    runs-on: ubuntu-latest
    strategy:
      # Ensure test pass as long as any Python version is successfully validated.
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        # clean unnecessary solo installs
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          echo "PYTHONPATH=hello_flask" >> $GITHUB_ENV

      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: PyTest with Coverage Report
        run: python -m coverage run -m pytest
      - name: Print Coverage report
        run: python -m coverage report
  docker_build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set docker image var
        run: DOCKER_IMAGE=cahlingo/amazing-website

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}
          tags: latest

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
